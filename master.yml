- hosts: masters
  become: yes
  tasks:
    - name: initialize the cluster
      shell: kubeadm init --pod-network-cidr=172.31.0.0/16 --ignore-preflight-errors=NumCPU,Mem
      args:
        creates: /etc/kubernetes/admin.conf
        chdir: $HOME

    - name: Ensure kube user exists
      user:
        name: kube
        shell: /bin/bash
        create_home: yes

    - name: Ensure kube user's home directory exists
      become: yes
      file:
        path: "/home/kube"
        state: directory
        owner: kube
        group: kube
        mode: '0755'

    - name: Create .kube directory for kube user
      become: yes
      file:
        path: "/home/kube/.kube"
        state: directory
        mode: '0755'

    - name: Create .kube directory for ubuntu user
      become: yes
      file:
        path: "/home/ubuntu/.kube"
        state: directory
        mode: '0755'

    - name: Check if kubelet is running
      systemd:
        name: kubelet
        state: started
      become: yes
      tags:
        - kubelet

    - name: Ensure kubelet is started and enabled
      systemd:
        name: kubelet
        state: started
        enabled: yes
      become: yes
      tags:
        - kubelet

    - name: copies admin.conf to user's kube config
      copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/kube/.kube/config
        remote_src: yes
        owner: kube

    - name: Copy kubeconfig to user home directory
      copy:
        src: /etc/kubernetes/admin.conf
        dest: "/home/ubuntu/.kube/config"
        remote_src: yes
        owner: ubuntu
        group: ubuntu
        mode: '0644'
      become: yes
      tags:
        - kubeconfig

    - name: Wait for Kubernetes API to become available
      uri:
        url: https://localhost:6443/healthz
        method: GET
        status_code: 200
        validate_certs: no
      register: kubeapi_health
      retries: 10
      delay: 15
      until: kubeapi_health.status == 200
      ignore_errors: yes
      become: yes

    - name: Reinitialize Kubernetes cluster if API is not up
      shell: kubeadm reset -f && kubeadm init --pod-network-cidr=172.31.0.0/16 --ignore-preflight-errors=all
      when: kubeapi_health.status != 200
      become: yes

    - name: Wait for Kubernetes API again after reinit
      uri:
        url: https://localhost:6443/healthz
        method: GET
        status_code: 200
        validate_certs: no
      register: kubeapi_health_after_reinit
      retries: 10
      delay: 15
      until: kubeapi_health_after_reinit.status == 200
      become: yes


    - name: Install Calico network plugin
      become: yes
      become_user: ubuntu  # or the user that has kubectl access
      command: kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml
      register: calico_apply
      retries: 5
      delay: 10
      until: calico_apply.rc == 0


    - name: Get the token for joining the worker nodes
      become: yes
      shell: kubeadm token create  --print-join-command
      register: kubernetes_join_command

    - name: Print join command
      debug:
        msg: "{{ kubernetes_join_command.stdout }}"


    - name: Copy join command to local file
      delegate_to: localhost
      copy:
        content: "{{ kubernetes_join_command.stdout_lines[0] }}"
        dest: "/tmp/kubernetes_join_command"
        mode: '0777'
